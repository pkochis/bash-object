#!/bin/bash

################################################################################
# Script name: basic-objects, Version 0.9.5
# This script is a part of "bash-object" project.
# https://github.com/pkochis/bash-object
# "bash-object" scripts are licensed under the GNU General Public License v3.0
# author: pal@kochis.hu
#
# A) Create obj-general object
# B) Create other objects
# C) Change error helper
################################################################################
[[ $(type -t objRcreate) != function ]] && exit  # prevents unwanted load

# A) Create obj-general object
objRhelp() { [[ -e ${obj_helpfile}.$1 ]] && source "${obj_helpfile}.$1" || source "${obj_helpfile}"; }
objR_HelpInit() {
 local helpfile=""
 helpfile="$(obj obj-general --localised-file "${1:-$PWD}" "${this[1]}.help")" && {
  objR_AddVariables -g obj_helpfile = "$helpfile"; this_methods+=(["IDP--help"]="help")
 }
}  # objR_HelpInit()
objR_GeneralInit() { [[ ${this[1]} != obj-general ]] && return;
 this_methods+=(["IDP--parent"]="Parent" ["IDP--error"]="Error")
}  # objR_GeneralInit
obj obj-general --create objR_Nodelete objR_GeneralInit \
 objR_NewMethods \
  N--debug '{ local i; declare -p this obj_methods$this obj_variables$this; for i in "${this_variables[@]}"; do declare -p obj_v$i; done; }' \
  P--localised-file '{
   local language="${3:-${LANG:-${LC_CTYPE:-en}}}" ret=""
   (($# > 1)) && {
    [[ -e $1/locale/en/$2 ]] && ret="$1/locale/en/$2"; [[ -e $1/locale/${language%%_*}/$2 ]] && ret="$1/locale/${language%%_*}/$2"
   }
   echo "$ret"; [[ -n $ret ]]
  }' \
  P--list-methods '{ local i;
   for i in "${!this_methods[@]}"; do
    case "$i" in IDP) echo "\"\"";; IDP*\ *) echo "\"${i#IDP}\"";; IDP*) echo "${i#IDP}";; esac;
   done
  }' \
 objR_HelpInit "$obj_HOME"


# B) Create other objects

# object-list
obj object-list --create objR_Nodelete \
 objR_NewMethods Pdefault '{ local i; for i in "${!objects[@]}"; do [[ $i = *\ * ]] && echo \"${i#ID}\" || echo ${i#ID}; done; }' \
 
# obj-dictionary
obj obj-dictionary --create objR_Nodelete objR_HelpInit "$obj_HOME" \
 objR_SetReference obj-general objR_GetMethods N--localised-file P--localised-file \
 objR_AddVariables -g folder = "${obj_HOME}" -g source_file = obj-error -gA dictionary \
 objR_NewMethods \
  Pdefault '{ echo "${dictionary["$1"]:-$1}"; }' \
  P--add-dictionary '{ local what=" "; [[ -e $1 ]] && {
    while IFS= read -r; do
     [[ $REPLY == From:\ * ]] && what="${REPLY#From: }"; [[ $REPLY == To:\ * ]] && { dictionary+=(["$what"]="${REPLY#To: }"); what=" "; }
    done < "$1";
   } 
  }' \
  P--add-local-dictionary '{ objP --add-dictionary "$(objN --localised-file "$folder" "$source_file")"; }' \

# --help
obj --help --create objR_Nodelete objR_HelpInit "$obj_HOME" objR_SetReference "--help" objR_GetMethods Pdefault P--help

# C) Change error helper
obj obj-dictionary --add-local-dictionary; unset -f objRError
objRError() { local i c=0 et="$(obj obj-dictionary default "$1")"; shift; for i in "$@"; do ((c++)); et="${et//!A${c}!/$i}"; done; echo "$et"; }
