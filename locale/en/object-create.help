################################################################################
# Hungarian help file: object-create.help, Version 0.9
# This file is made for the "bash-object" project.
# https://github.com/pkochis/bash-object
# "bash-object" scripts are licensed under the GNU General Public License v3.0
# author: pal@kochis.hu
################################################################################
The --create method creates the object

Usage: obj <object> --create [SWITCH] [keyword [parameters]]...

Switch:
  nodelete   The --erase method is not created for the created object.

Common keywords:
  objI_SetReference <reference object>. 
       Sets the specified object as a reference.
  objI_CopyReference
       Copies all methods and all variables of the reference object
       with their values to the new object. Overwrites the old data
       in case of a collision.

Variable handling keywords:
  objI_RemoveVariables <variable>...
       Deletes the listed variables.
  objI_AddVariables <attribute> <variable> [= <value>]...
       Creates the variables. Optionally, an initial value can be specified here.
  objI_GetVariables <variable> <variable in reference>...
       Copies the value of the variable in the reference object to the variable
       of the new object. If the new variable not exists, it will created.
       In case of a collision the variable will be overwritten.

Keywords handling methods:
  objI_RemoveMethods <method>...
       Removes the listed methods from the object.
  objI_NewMethods <method> '{ <code>; }'...
       Creates the method. Removes the old method in case of a collision.
  objI_GetMethods <method> <method in reference>...
       Adds the method of the reference object to the methods of the new object.
       In case of a collision, the new method will overwrittten by the reference method.

The names of the methods should specify whether they are poblic or not:
  P<method name> public method
  N<method name> non-public method
