################################################################################
# English help file: --help.create, Version 1.0
# This file is made for the "bash-object" project.
# https://github.com/pkochis/bash-object
# "bash-object" scripts are licensed under the GNU General Public License v3.0
# author: pal@kochis.hu
################################################################################
printf "
The obj-create method creates the object. It can only be used for this.
Once the object is created, it is deleted.

Usage: obj <new object> obj-create [SWITCH [parameters] ...]

General switches:
  objC_copyreference        Copies all methods and variables with their current
                            values from the reference object to te new one.
  objC_defaulthelp          Sets the default method to --help if exists.
  objC_init <command>       Same as the objI command, but it can be used when
                            creating an object.
  objC_noerase              Does not create obj-erase method.
  objC_reference <object>   Sets the reference object.

Switches for methods and variables:
  objC_delmethod <method>        Removes one method from the new object.
  objC_delvariable <variable>    Removes one variable or array from
                                 the new object.
  objC_private <parameters>      Sets one private method to the new object.
  objC_public <parameters>       Sets one public method to the new object.       
  objC_variable <parameters>     Sets one variable or array to the new object.

Notes:
 a) Creates new method with new code:
      objC_private <method> '{ <code>; }'
      objC_public  <method> '{ <code>; }'
 b) Using existing code for new method:
      objC_private <method> reference <reference method>
      objC_public  <method> reference <reference method>
 c) Creates new variable:
      objC_variable <variable> <attribute> [= <value>]
 d) Creates new array or associative array:
      objC_variable <array> <attribute> [= '(<items>)']
 e) Copies one variable or array or associative array from reference:
      objC_variable <variable> reference <reference variable>
 f) The reference can be an another object or the new one yet.
 g) The obj-create method processes the switches and parameters
    from left to right, step by step.
 h) In case of name conflict, the old values are overwritten.   
 i) The variables (and arrays) are independent of each other, there is
    no relationship between them. Any relationship can only be
    implemented through methods.
 j) Each variable has a unique, hidden name. The name we give is only
    is a reference to these names.
 k) The names of the variables we give must follow the naming conventions
    for bash variables.
 l) The same code can belong to several public and private methods
    at the same time, even in a different object.
 m) If a method is detached from an object, its code is not deleted,
    only if it is no longer used by any method of any object.
 n) With some exceptions, method and object names may contain special
    characters. Spaces should be protected by quotation marks or backslashes.
 o) The default reference is the empty object.

"
