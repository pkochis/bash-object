#!/usr/bin/env bash

################################################################################
# Hungarian help file: @obj@backup-variables.help  Version 1.5
# This file is made for the "bash-object" project.
# https://github.com/pkochis/bash-object
# "bash-object" scripts are licensed under the GNU General Public License v3.0
# author: pal@kochis.hu
################################################################################

[[ ${this[1]} != @* ]] && printf "
Objektum: ${this[1]}
Osztály:  ${this_details[parent]}

Használat: obj ${this[1]} [<publikus metódus>]
"

[[ ${this[1]} == @* ]] && printf "
Osztály: ${this[1]}

Az osztályba tartozó objektumok használata:
  obj <objektum> [<publikus metódus>]
"

printf "
Publikus metódusok:
  --help            Megjeleníti ezt a súgót.
  obj-erase         Törli az objektumot.
  obj-backup        Fáljba menti az objektum változóit.
  obj-restore       Visszatölti az objektum elmentett változóit.

Alapértelmezett metódus: obj-restore

Változó:
  obj_backupfile    A backup fájl neve

Megjegyzések:
  a) Ha a példányosításkor nem adtuk meg a backup fájl nevét,
     akkor az obj-backup, vagy az obj-restore első használatakor
     beállítja. Az obj-backup létre is hozza a fájlt.
  b) Az egyszer már létrejött fájlnevet nem tudjuk felülírni,
     csak a backup fájl módosításával és visszatöltésével.
  b) A generált fájlnév abszolút úvonal. 
  c) A generált fájlnév a következő lesz:
       \"<aktuális könyvtár>/<objektum>.bak\"
  d) Ha a backup fájlban lévő valamelyik változó nincs definiálva
     az objektumban, az obj-restore eldobja.

Példa:
  Objektum konstruktor:
"

[[ ${this[1]} != @* ]] && printf "    obj ${this_details[parent]} obj-create fontos \\"
[[ ${this[1]} == @* ]] && printf "    obj ${this[1]} obj-create fontos \\"

printf "
    objC_Variable obj_backupfile=\"${HOME}/fontosak.bak\"
"
