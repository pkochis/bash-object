################################################################################
# Hungarian help file: obj.create, Version 1.5
# This file is made for the "bash-object" project.
# https://github.com/pkochis/bash-object
# "bash-object" scripts are licensed under the GNU General Public License v3.0
# author: pal@kochis.hu
################################################################################
printf "
Az öröklődés:
 obj @<osztály> obj-create @<új osztály> [kifejezés]...

A kifejezések alakja: <kulcsszó> [paraméterek]

Kulcsszavak:
 objC_Default <publikus metódus>  A publikus metódust alapértelmezettnek jelöli
 objC_NoDefault                   Nem jelöl metódust alapértelmezettnek
 objC_Init <metódus>              A metódust a példányosítás végén végrehajtja
 objC_NoInit                      Nem hajt végre inicializáló metódust
 objC_DelMethod <metódus>         A metódust törli
 objC_DelVariable <változó>       A változót törli
 objC_Public <minta>              Publikus metódust hoz létre
 objC_Private <minta>             Privát metódust hoz létre
 objC_Variable <minta>            Új változót hoz létre, vagy egy meglévő
                                  értékét módosítja

Megjegyzések:
 a) A kifejezések az öröklődéskor kerülnek kiértékelésre, azután, hogy
    az osztály a benne tárolt inaktív metódusokat és változókat átmásolta
    az új osztályba. A kifejezések csak az öröklődés során használhatóak.
 b) A kifejezések módosítják az új osztályban tárolt inaktív metódusokat és
    változókat, de az osztály saját, aktív metódusaira nincsenek hatással.
 c) A kifejezésekkel a példányosítás során létrejövő objektumok viselkedését
    tudjuk beállítani.
 d) Minden kifejezés csak egy metódusra, vagy változóra hat. Újabb metódushoz,
    vagy változóhoz új kifejezést kell írni.
 e) Minden kulcsszó "objC_"-vel kezdődik.
 f) Az objC_Default által beállított metódust keresi az obj parancs,
    ha nem talál az üzenetben publikus metódust.
 g) Metódus létrehozásakor (vagy felülírásakor) kétféle minta használható:
    1) Új metódus létrehozásához: <metódus> '{ kód; }'
    2) Meglévő metódus átmásolásához: <metódus> @<osztály> <metódus>
 h) Változó létrehozásakor (vagy felülírásakor) kétféle minta használható:
    1) <attribútum> <változó>=<érték>
    2) Meglévő változó átmásolásához: <változó> @<osztály> <változó>
 i) A <változó>=<érték> kifejezést egyben kell átadni a konstruktornak, így:
      <változó>='<érték>'              vagy  <változó>=\"<érték>\"
      '<tömb>=(<listaelem>...)'        vagy  \"<tömb>=(<listaelem>...)\"
      '<tömb>=([<index>]=<érték>...)'  vagy  \"<tömb>=([<index>]=<érték>...)\"
 j) Metódusok és változók névkonfliktusai esetén a régebbi információk
    felülíródnak.   
 k) A változóneveknek a bash változókra vonatkozó névhasználati konvencióit
    kell követniük.
 l) A metódusok és objektumok nevei - néhány kivételtől eltekintve -
    tartalmazhatnak speciális karaktereket. A szóközöket védjük
    idézőjelekkel, vagy visszaperjellel!
"
