#!/bin/bash

################################################################################
# Script name: obj, Version 0.9.5
# This script is a part of "bash-object" project.
# https://github.com/pkochis/bash-object
# "bash-object" scripts are licensed under the GNU General Public License v3.0
# author: pal@kochis.hu
#
# A) Get & set real name of obj's home directory
# B) Loader and message handler
#
# Reserved words: obj* this* default --*
################################################################################

# A) Get real name of obj's home directory
objRParent() { local v
 v="${1%/*}"; [[ -z $1 || $v == $1 ]] && v="."; [[ -z $v ]] && v="/"  # try get parent; if missing parent; if missing path
 cd "$v"; v="$PWD"; cd "$OLDPWD"; echo "$v"  #  get and return with real name of parent
};  export -f objRParent
[[ -z ${obj_HOME} ]] && obj_HOME="$(objRParent "$BASH_SOURCE}")"; export obj_HOME

# B) Loader and message handler
obj() {
 (($# * ${#obj_variables0[@]} == 0)) && source "${obj_HOME}/init"  # load environment if it was missing
 (($# > 0)) && {  # parse message BEGIN
  declare -a this=("${objects["ID$1"]:-0}" "$1" "$2"); shift  # get ID of object
  declare -n this_methods=obj_methods$this this_variables=obj_variables$this  # load object
  local i; for i in "${!this_variables[@]}"; do declare -n ${i#ID}=obj_v${this_variables["$i"]}; done  # attach variables
  [[ -n ${this_methods["IDP$1"]} || -z ${this_methods["IDPdefault"]} ]] && shift || this[2]="default"  # check existance of method
  objP "${this[2]}" "$@"  # pass message to internal message handler
 }  # parse message END
}; export -f obj
